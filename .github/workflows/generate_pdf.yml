name: Generate & Publish PDFs (tasks + final)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build-pdfs:
    runs-on: ubuntu-latest

    env:
      CURRENT_PROJECT: ${{ vars.CURRENT_PROJECT }}      # uvod / bosna / stupnik / dubrovnik
      GH_PAGES_DIR: gh-pages
      PAGES_DIR: pages
      PUBLIC_HOST: https://hjftm.github.io

      # ▶︎ Nova okolina za skriptu:
      FINAL_PDF_NAME: prezime.pdf        # kako želiš da se zove finalni PDF
      FINAL_COMPRESS: "true"             # skripta koristi Ghostscript ako postoji
      GS_QUALITY: "/ebook"               # /screen /ebook /printer /prepress

      # (po želji predefiniraj zadatke preko JSON-a)
      # PDF_TASKS_JSON: >-
      #   [
      #     {"name":"koncept.pdf","pages":["pages/KONCEPT*"]},
      #     {"name":"rod.pdf","pages":["pages/ROD*"]},
      #     {"name":"matice.pdf","pages":["pages/ENTITET/matica*"]},
      #     {"name":"mjesto.pdf","pages":["pages/ENTITET/mjesto*"]},
      #     {"name":"obitelj.pdf","pages":["pages/ENTITET/obitelj*"]},
      #     {"name":"zupa.pdf","pages":["pages/ENTITET/zupa*"]}
      #   ]

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          path: main

      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: main
        run: npm ci || npm install

      # Ako želiš da skripta radi kompresiju finala, treba GS
      - name: Install Ghostscript (for in-script compression)
        run: |
          sudo apt-get update
          sudo apt-get install -y ghostscript

      - name: Generate all task PDFs + final merged PDF
        run: node main/scripts/generate-single-pdf.js

      - name: Show produced PDFs
        run: |
          echo "PDFs in gh-pages:"
          ls -lh gh-pages/*.pdf || true

      # ── VARIJANTA B (opcionalno): dodatna kompresija samo finala nakon skripte ──
      # - name: Extra compress final to <100 MB (optional)
      #   run: |
      #     cd gh-pages
      #     IN="${{ env.FINAL_PDF_NAME }}"
      #     if [ ! -f "$IN" ]; then
      #       echo "ERROR: $IN not found in gh-pages"; ls -la; exit 1
      #     fi
      #     TARGET=100000000
      #     OUT="${IN%.pdf}.min.pdf"
      #     echo "Initial size:"; ls -lh "$IN"
      #     gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook \
      #        -dNOPAUSE -dBATCH -dQUIET \
      #        -sOutputFile="$OUT" "$IN"
      #     size=$(stat -c%s "$OUT")
      #     echo "After /ebook: $((size/1024/1024)) MB"
      #     if [ "$size" -ge "$TARGET" ]; then
      #       gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen \
      #          -dNOPAUSE -dBATCH -dQUIET \
      #          -sOutputFile="$OUT" "$IN"
      #     fi
      #     mv -f "$OUT" "$IN"
      #     echo "Final size:"; ls -lh "$IN"

      - name: Commit & push ALL PDFs
        working-directory: gh-pages
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add *.pdf
          git commit -m "Update PDFs ($(date +'%Y-%m-%d_%H:%M:%S'))" || echo "No changes to commit"
          git push origin gh-pages
