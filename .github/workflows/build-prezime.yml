name: Sync ONLY pages/ from uvod/bosna/stupnik/dubrovnik into gh-pages

on:
  workflow_dispatch:
  schedule:
    - cron: "15 3 * * *"  # dnevno u 03:15 UTC

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 1) Checkout default branch (radi git konteksta i inicijalizacije)
      - name: Checkout default branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Osiguraj da gh-pages postoji (prvi put kreira)
      - name: Ensure gh-pages branch exists
        shell: bash
        run: |
          if ! git ls-remote --exit-code --heads origin gh-pages >/dev/null 2>&1; then
            echo "gh-pages not found; creating…"
            git switch --orphan gh-pages
            git rm -r -f --ignore-unmatch * .[^.]* || true
            echo "<!doctype html><meta charset=utf-8><title>prezime</title>" > index.html
            git -c user.name="GitHub Action" -c user.email="action@github.com" add -A
            git -c user.name="GitHub Action" -c user.email="action@github.com" commit -m "Initialize gh-pages"
            git push origin gh-pages
          else
            echo "gh-pages exists."
          fi

      # 3) Radimo na gh-pages grani
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      # 4) Očisti samo ciljane podmape u destinaciji (ne diraj .git)
      - name: Prepare target subfolders
        shell: bash
        run: |
          for d in Uvod Bosna Stupnik Dubrovnik; do
            rm -rf "$d/pages"
            mkdir -p "$d/pages"
          done
          mkdir -p tmp

      # 5) Kloniraj IZVORE (grana gh-pages) u tmp/
      #    Ako su privatni repoji, koristi PAT varijantu:
      #    SRC="https://x-access-token:${{ secrets.SOURCE_PAT }}@github.com/HJFTM"
      - name: Clone source repos (gh-pages)
        shell: bash
        run: |
          SRC="https://github.com/HJFTM"
          git clone --depth=1 --branch gh-pages "$SRC/uvod.git"      tmp/uvod
          git clone --depth=1 --branch gh-pages "$SRC/bosna.git"     tmp/bosna
          git clone --depth=1 --branch gh-pages "$SRC/stupnik.git"   tmp/stupnik
          git clone --depth=1 --branch gh-pages "$SRC/dubrovnik.git" tmp/dubrovnik

      # 6) Kopiraj ISKLJUČIVO tmp/<repo>/pages/ u <Dest>/pages/
      #    -L  : dereferenciraj symlinkove (kopiraj stvarne fajlove)
      #    --exclude='.git*' i .github/... : ne povlači git/metu
      - name: Sync pages/ only
        shell: bash
        run: |
          sync_pages () {
            local src="$1" dest="$2"
            if [ -d "$src/pages" ]; then
              rsync -avL --delete \
                --exclude='.git' --exclude='.git/**' \
                --exclude='.github' --exclude='.github/**' \
                --exclude='.gitignore' --exclude='.gitattributes' \
                "$src/pages/" "$dest/pages/"
            else
              echo "WARN: $src/pages ne postoji – preskačem."
            fi
          }

          sync_pages tmp/uvod      Uvod
          sync_pages tmp/bosna     Bosna
          sync_pages tmp/stupnik   Stupnik
          sync_pages tmp/dubrovnik Dubrovnik

          rm -rf tmp

      # (opcionalno) Prikaži kratki diff u logu
      - name: Debug diff summary
        shell: bash
        run: |
          echo "Broj promjena:"
          git status --porcelain | wc -l | xargs echo
          git status --porcelain | sed -n '1,200p'

      # 7) Commit & push
      - name: Commit & push
        shell: bash
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes."
          else
            git commit -m "Sync pages/ from uvod/bosna/stupnik/dubrovnik → Uvod|Bosna|Stupnik|Dubrovnik ($(date -u +%F_%T))"
            git push origin gh-pages
          fi
