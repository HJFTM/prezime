name: Sync gh-pages into subfolders (Uvod/Bosna/Stupnik/Dubrovnik)

on:
  workflow_dispatch:
  schedule:
    - cron: "15 3 * * *"  # dnevno u 03:15 UTC

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 1) Checkout default branch (radi git konteksta i inicijalizacije)
      - name: Checkout default branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Kreiraj gh-pages ako ne postoji
      - name: Ensure gh-pages branch exists
        shell: bash
        run: |
          if ! git ls-remote --exit-code --heads origin gh-pages >/dev/null 2>&1; then
            echo "gh-pages not found; creating…"
            git switch --orphan gh-pages
            git rm -r -f --ignore-unmatch * .[^.]* || true
            echo "<!doctype html><meta charset=utf-8><title>prezime</title>" > index.html
            git -c user.name="GitHub Action" -c user.email="action@github.com" add -A
            git -c user.name="GitHub Action" -c user.email="action@github.com" commit -m "Initialize gh-pages"
            git push origin gh-pages
          else
            echo "gh-pages exists."
          fi

      # 3) Radimo na gh-pages grani
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      # 4) Očisti samo ciljane podmape (NE diraj .git i ostale fajlove)
      - name: Prepare target subfolders
        shell: bash
        run: |
          for d in Uvod Bosna Stupnik Dubrovnik; do
            rm -rf "$d"
            mkdir -p "$d"
          done
          mkdir -p tmp

      # 5) Kloniraj izvorne gh-pages grane
      - name: Clone source gh-pages
        shell: bash
        run: |
          # Ako su repoji privatni, koristi PAT varijantu:
          # SRC="https://x-access-token:${{ secrets.SOURCE_PAT }}@github.com/HJFTM"
          SRC="https://github.com/HJFTM"
          git clone --depth=1 --branch gh-pages "$SRC/uvod.git"      tmp/uvod
          git clone --depth=1 --branch gh-pages "$SRC/bosna.git"     tmp/bosna
          git clone --depth=1 --branch gh-pages "$SRC/stupnik.git"   tmp/stupnik
          git clone --depth=1 --branch gh-pages "$SRC/dubrovnik.git" tmp/dubrovnik

      # 6) Kopiraj sadržaj u odgovarajuće PODMAPE (dereference symlinks, isključi .git, .github…)
      - name: Sync into subfolders
        shell: bash
        run: |
          rsync -avL --delete \
            --exclude='.git' --exclude='.github' --exclude='.gitignore' --exclude='.gitattributes' \
            "tmp/uvod/"      "Uvod/"

          rsync -avL --delete \
            --exclude='.git' --exclude='.github' --exclude='.gitignore' --exclude='.gitattributes' \
            "tmp/bosna/"     "Bosna/"

          rsync -avL --delete \
            --exclude='.git' --exclude='.github' --exclude='.gitignore' --exclude='.gitattributes' \
            "tmp/stupnik/"   "Stupnik/"

          rsync -avL --delete \
            --exclude='.git' --exclude='.github' --exclude='.gitignore' --exclude='.gitattributes' \
            "tmp/dubrovnik/" "Dubrovnik/"

          rm -rf tmp

      # (opcionalno) Kratki pregled promjena u logu
      - name: Debug diff summary
        shell: bash
        run: |
          echo "Changed files count:"
          git status --porcelain | wc -l | xargs echo
          git status --porcelain | sed -n '1,200p'

      # 7) Commit & push
      - name: Commit & push
        shell: bash
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes."
          else
            git commit -m "Sync gh-pages into subfolders (Uvod/Bosna/Stupnik/Dubrovnik) $(date -u +%F_%T)"
            git push origin gh-pages
          fi
